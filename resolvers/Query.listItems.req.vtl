## This is our starting point; we will expand this based on the input
#set($selectClause = "SELECT * FROM demo")

## Since we want to support pagination, we need to order our results.
## If the user didn't provide a specific sort order, we will sort by ID, by default
#if ($ctx.args.sortKey)
  #set( $sortKey = $ctx.args.sortKey)
#else
  #set( $sortKey = "id")
#end

## If input specified a sort order, use that; otherwise, sort results ascending:
#if ($ctx.args.sortOrder)
  #set( $sortOrder = $ctx.args.sortOrder)
#else
  #set( $sortOrder = "ASC")
#end

## By default, assume our sort operator is for ascending order:
#set( $sortOperator = ">")

## If request specifies descending sort, adjust accordingly
#if ($sortOrder == "DESC")
  #set ($sortOperator = "<")
#end

## Build our order clause, which might look like: ORDER BY someField ASC
#set ($orderClause = "ORDER BY ${sortKey} ${sortOrder}")

## These are the components that make up our later final where clause:
#set ($whereClauses = [])

## This is the final where clause we pass to RDS: 
#set ($finalWhereClause = "")

## If a nextToken is specified, we use this to determine where to start returning results.
## This supports pagination efforts: 
#if( $ctx.args.nextToken )
  #set( $nextToken = $ctx.args.nextToken)
  ## Example og whereClause = "id               >          99999999"
  $util.qr($whereClauses.add("${sortKey} ${sortOperator} ${nextToken}"))
#end

## Build our final where clause by concatenating individual where clauses
#foreach ($whereClause in $whereClauses)
  #if( $foreach.count == 1)
    #set( $finalWhereClause = "WHERE ${whereClause}")
  #else
    #set( $finalWhereClause = "${finalWhereClause} AND ${whereClause}")
  #end
#end

## Optionally, define a per-query limit
#set( $limitClause = "")
#if( $ctx.args.limit)
  #set( $limitClause = "LIMIT ${ctx.args.limit}")
#end

## This is our final SQL command
#set($selectStatement = "${selectClause} ${finalWhereClause} ${orderClause} ${limitClause}")
{
  "version": "2018-05-29",
  "statements":   ["${selectStatement}"]
}
